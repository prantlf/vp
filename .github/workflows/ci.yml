name: Build and Test or Release

on:
  push:
    branches:
      - master
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/*.md'
      - LICENSE
  pull_request:

jobs:

  linux:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.bump.outputs.bumped }}
      changed-files: ${{ steps.bump.outputs.changed-files }}
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v4
    - name: Setup V
      uses: prantlf/setup-v-action@v2
    - name: Bump version
      id: bump
      uses: prantlf/bump-version-action@v2
      with:
        bump-files: src/vp.v
    - name: Shelve changes
      uses: prantlf/shelve-changes-action@v1
    - name: Build and Test
      run: make RELEASE=1
    - name: Shelve output
      uses: prantlf/shelve-output-action@v2
      with:
        enable: ${{ steps.bump.outputs.bumped }}
    - name: Install ARM Cross-Compiler
      run: |
        sudo apt-get update
        sudo apt-get install gcc gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
    - name: Build ARM
      run: make build RELEASE=1 LINUX_ARM=1
    - name: Shelve output
      uses: prantlf/shelve-output-action@v2
      with:
        enable: ${{ steps.bump.outputs.bumped }}
        arch: arm64

  macos:
    needs:
      - linux
    runs-on: macos-latest
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v4
    - name: Setup V
      uses: prantlf/setup-v-action@v2
    - name: Unshelve changes
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/unshelve-changes-action@v1
      with:
        files: ${{ needs.linux.outputs.changed-files }}
        discard-shelf: false
    - name: Build and Test
      run: make RELEASE=1
    - name: Shelve output
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/shelve-output-action@v2
    - name: Build ARM
      run: make build RELEASE=1 MACOS_ARM=1
    - name: Shelve output
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/shelve-output-action@v2
      with:
        arch: arm64
    # - name: Set up Homebrew
    #   uses: Homebrew/actions/setup-homebrew@master
    # - name: Install MinGW64
    #   run: brew install mingw-w64
    # - name: Build Windows
    #   run: make build RELEASE=1 WINDOWS=1
    # - name: Shelve output
    #   if: ${{ needs.linux.outputs.changed == 'true' }}
    #   uses: prantlf/shelve-output-action@v2
    #   with:
    #     os: windows

  # windows:
  #   needs:
  #     - linux
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout Sources
  #     uses: actions/checkout@v4
  #   - name: Setup V
  #     uses: prantlf/setup-v-action@v2
  #   - name: Unshelve changes
  #     if: ${{ needs.linux.outputs.changed == 'true' }}
  #     uses: prantlf/unshelve-changes-action@v1
  #     with:
  #       files: ${{ needs.linux.outputs.changed-files }}
  #       discard-shelf: false
  #   - name: Install Cross-Compiler
  #     run: sudo apt-get install gcc-mingw-w64-x86-64
  #   - name: Build Windows
  #     run: make build RELEASE=1 WINDOWS=1
  #   - name: Shelve output
  #     if: ${{ needs.linux.outputs.changed == 'true' }}
  #     uses: prantlf/shelve-output-action@v2
  #     with:
  #       os: windows

  # windows:
  #   needs:
  #     - linux
  #   runs-on: windows-latest
  #   steps:
  #   - name: Checkout Sources
  #     uses: actions/checkout@v4
  #   - name: Setup V
  #     uses: prantlf/setup-v-action@v2
  #     with:
  #       install-dependencies: false
  #   - name: Install Dependencies
  #     run: |
  #       md src\modules
  #       md src\modules\prantlf
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-cargs src\modules\prantlf\cargs
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-cli src\modules\prantlf\cli
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-config src\modules\prantlf\config
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-debug src\modules\prantlf\debug
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-dotenv src\modules\prantlf\dotenv
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-ini src\modules\prantlf\ini
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-jany src\modules\prantlf\jany
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-json src\modules\prantlf\json
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-osutil src\modules\prantlf\osutil
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-path src\modules\prantlf\path
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-pcre src\modules\prantlf\pcre
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-strutil src\modules\prantlf\strutil
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-yaml src\modules\prantlf\yaml
  #   - name: Unshelve changes
  #     if: ${{ needs.linux.outputs.changed == 'true' }}
  #     uses: prantlf/unshelve-changes-action@v1
  #     with:
  #       files: ${{ needs.linux.outputs.changed-files }}
  #       discard-shelf: false
  #   - name: Build
  #     run: cmd /c make-exe.bat
  #   - name: Shelve output
  #     if: ${{ needs.linux.outputs.changed == 'true' }}
  #     uses: prantlf/shelve-output-action@v2

  release:
    if: ${{ github.ref_name == 'master' && needs.linux.outputs.changed == 'true' }}
    needs:
      - linux
      - macos
      # - windows
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
    - name: Unshelve changes
      uses: prantlf/unshelve-changes-action@v1
      with:
        files: ${{ needs.linux.outputs.changed-files }}
    - name: Unshelve output
      uses: prantlf/unshelve-output-action@v5
      with:
        include-windows: false
    - name: Publish release
      uses: prantlf/finish-release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
